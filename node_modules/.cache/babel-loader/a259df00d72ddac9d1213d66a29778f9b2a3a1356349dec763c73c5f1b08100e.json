{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\shyamapp\\\\src\\\\components\\\\Update.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Update = () => {\n  _s();\n  // Ham data ko update 2 tarike se kar sakte hai, first tarika hai jisme ham database se direct data get karke usme update kare and dusra tarika hai jisme ham edit button par click karne par us data ko loalstorage me save kar lenege or phir is local storage se is data ko get karke usko update waale page me update kar denge (hame ye edit button waala kaam Read component ke ander karna hai kyuki wahi par hamara all data hoga), or yaha ham local storage waala tarika he use kar rahe hai data ko update karne ke liye.\n\n  const [id, setId] = useState(0);\n  const [formValues, setFormValues] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setId(localStorage.getItem('id'));\n    setName(localStorage.getItem('username'));\n    setEmail(localStorage.getItem('email'));\n    setEmail(localStorage.getItem('password'));\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(formValues => {\n      return {\n        ...formValues,\n        [name]: value // [name] isme ya to title hoga ya content, agar title hua to preData object me title properties se match ho jaayega or usme value pass kar denge jo typeki hai, same in case of content.\n      };\n    });\n  };\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n    axios.put(`https://63f1fbf04f17278c9a1dcbf5.mockapi.io/crud-operation/${id}`, {\n      name: username,\n      email: email,\n      password: password\n    }).then(() => {\n      navigate('/read'); // update button par click karne ke baad yaha par 2 task perform honge pehla jisme data update hoga axios ke thru and then dusra hame read waale page par navigate kar denge.\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"register-now\",\n          children: \"Update Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            value: email,\n            \"aria-describedby\": \"emailHelp\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: \"btn-green mx-2\",\n          type: \"submit\",\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/read\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"mx-2\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Update, \"TZ+ZymcVTOYRf8zsa/VlXDCLivg=\", false, function () {\n  return [useNavigate];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","axios","Button","Update","id","setId","formValues","setFormValues","username","email","password","formErrors","setFormErrors","isSubmit","setIsSubmit","navigate","localStorage","getItem","setName","setEmail","handleChange","e","name","value","target","handleUpdate","preventDefault","validate","put","then"],"sources":["E:/reactjs/shyamapp/src/components/Update.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nconst Update = () => {\r\n  // Ham data ko update 2 tarike se kar sakte hai, first tarika hai jisme ham database se direct data get karke usme update kare and dusra tarika hai jisme ham edit button par click karne par us data ko loalstorage me save kar lenege or phir is local storage se is data ko get karke usko update waale page me update kar denge (hame ye edit button waala kaam Read component ke ander karna hai kyuki wahi par hamara all data hoga), or yaha ham local storage waala tarika he use kar rahe hai data ko update karne ke liye.\r\n\r\n  const [id, setId] = useState(0);\r\n  const [formValues, setFormValues] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setId(localStorage.getItem('id'));\r\n    setName(localStorage.getItem('username'));\r\n    setEmail(localStorage.getItem('email'));\r\n    setEmail(localStorage.getItem('password'));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormValues((formValues) => {\r\n      return {\r\n        ...formValues,\r\n        [name]: value, // [name] isme ya to title hoga ya content, agar title hua to preData object me title properties se match ho jaayega or usme value pass kar denge jo typeki hai, same in case of content.\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    setFormErrors(validate(formValues));\r\n    setIsSubmit(true);\r\n\r\n    axios\r\n      .put(`https://63f1fbf04f17278c9a1dcbf5.mockapi.io/crud-operation/${id}`, {\r\n        name: username,\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then(() => {\r\n        navigate('/read'); // update button par click karne ke baad yaha par 2 task perform honge pehla jisme data update hoga axios ke thru and then dusra hame read waale page par navigate kar denge.\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"inner-container\">\r\n        <div className=\"d-flex justify-content-between my-3\">\r\n          <h2 className=\"register-now\">Update Data</h2>\r\n        </div>\r\n\r\n        <form>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              value={email}\r\n              aria-describedby=\"emailHelp\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"btn-green mx-2\"\r\n            type=\"submit\"\r\n            onClick={handleUpdate}\r\n          >\r\n            Update\r\n          </Button>\r\n\r\n          <Link to=\"/read\">\r\n            <Button variant=\"contained\" className=\"mx-2\">\r\n              Back\r\n            </Button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}